<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chen's blog (Posts about debug)</title><link>http://blog.binchen.org/</link><description></description><atom:link href="http://blog.binchen.org/categories/debug.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Fri, 25 Aug 2023 10:39:57 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Debug Emacs Lisp code the hard way</title><link>http://blog.binchen.org/posts/debug-emacs-lisp-code-the-hard-way/</link><dc:creator>Chen Bin</dc:creator><description>&lt;p&gt;I &lt;a href="https://github.com/emacs-helm/helm/issues/448"&gt;met some issue&lt;/a&gt; when using helm several days ago. &lt;/p&gt; &lt;p&gt; With the help from Michael Heerdegen, I can locate the line error message is dumped. &lt;/p&gt; &lt;p&gt; But the problem is I cannot get the backtrace at all. &lt;/p&gt; &lt;p&gt; So I insert some &lt;a href="http://www.gnu.org/software/emacs/manual/html_node/elisp/Internals-of-Debugger.html"&gt;backtrace printing code&lt;/a&gt; above that line and "M-x eval-buffer": &lt;/p&gt;   


&lt;pre class="prettyprint "&gt;

(with-output-to-temp-buffer "backtrace-output"
  (let ((var 1))
    (save-excursion
      (setq var (eval '(progn
                         (1+ var)
                         (list 'testing (backtrace))))))))
&lt;/pre&gt;


   &lt;p&gt; It turns out that some third party package I installed changes the emacs variable "display-buffer-function". I guess that's why the backtrace is blocked. Because backtrace is usually dumped into a backtrace buffer. And backtrace buffer's is actually influenced by the variable. &lt;/p&gt;</description><category>debug</category><category>elisp</category><category>emacs</category><category>en</category><guid>http://blog.binchen.org/posts/debug-emacs-lisp-code-the-hard-way/</guid><pubDate>Wed, 19 Mar 2014 19:45:00 GMT</pubDate></item><item><title>Notes on Google Chrome's dev tool</title><link>http://blog.binchen.org/posts/notes-on-google-chromes-dev-tool/</link><dc:creator>Chen Bin</dc:creator><description>&lt;ul&gt; &lt;li&gt;C-[ or C-] to switch panel &lt;/li&gt; &lt;li&gt;C-S-J to toggle dev tools and focus &lt;b&gt;Console panel&lt;/b&gt;, see &lt;a href="https://developers.google.com/chrome-developer-tools/docs/commandline-api"&gt;command line reference&lt;/a&gt; &lt;/li&gt; &lt;li&gt;C-S-I to toggle dev tools, then C-o to switch to &lt;b&gt;Sources panel&lt;/b&gt; if needed &lt;/li&gt; &lt;li&gt;C-S-C to &lt;b&gt;open&lt;/b&gt; dev tools and focus on &lt;b&gt;Elements panel&lt;/b&gt; &lt;/li&gt; &lt;li&gt;See &lt;a href="https://developers.google.com/chrome-developer-tools/docs/shortcuts"&gt;https://developers.google.com/chrome-developer-tools/docs/shortcuts&lt;/a&gt; for all hot keys &lt;/li&gt; &lt;li&gt;See &lt;a href="https://developers.google.com/chrome-developer-tools/docs/javascript-debugging"&gt;https://developers.google.com/chrome-developer-tools/docs/javascript-debugging&lt;/a&gt; &lt;/li&gt; &lt;li&gt;Click &lt;a href="http://javascript-library.googlecode.com/svn/trunk/javascript/goog/demos/hovercard.html"&gt;here&lt;/a&gt; for test &lt;/li&gt; &lt;/ul&gt;   &lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt; &lt;caption&gt;&lt;/caption&gt; &lt;colgroup&gt;&lt;col class="left"&gt;&lt;col class="left"&gt; &lt;/colgroup&gt; &lt;thead&gt; &lt;tr&gt;&lt;th scope="col" class="left"&gt;command in source panel&lt;/th&gt;&lt;th scope="col" class="left"&gt;hotkey&lt;/th&gt;&lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td class="left"&gt;Continue&lt;/td&gt;&lt;td class="left"&gt;C-\&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td class="left"&gt;Toggle break point&lt;/td&gt;&lt;td class="left"&gt;C-B&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td class="left"&gt;Step over&lt;/td&gt;&lt;td class="left"&gt;C-'&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td class="left"&gt;Step into&lt;/td&gt;&lt;td class="left"&gt;C-;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td class="left"&gt;Step out&lt;/td&gt;&lt;td class="left"&gt;S-C-;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td class="left"&gt;Up call stack&lt;/td&gt;&lt;td class="left"&gt;C-,&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td class="left"&gt;Down call stack&lt;/td&gt;&lt;td class="left"&gt;C-.&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td class="left"&gt;Toggle console view&lt;/td&gt;&lt;td class="left"&gt;ESC&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td class="left"&gt;Goto line&lt;/td&gt;&lt;td class="left"&gt;C-G&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td class="left"&gt;Goto file&lt;/td&gt;&lt;td class="left"&gt;C-P&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td class="left"&gt;Jump to method&lt;/td&gt;&lt;td class="left"&gt;S-C-O&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt;  &lt;ul&gt; &lt;li&gt;I don't use hotkey F1~F12 because my windows manager is different from most developers &lt;/li&gt; &lt;li&gt;live editing does not work on Chromium 30.0.1599.114 Built on Ubuntu 13.04. Anyway, I don't need this functionality &lt;/li&gt; &lt;li&gt;hotkeys of "Continue" button in &lt;b&gt;Sources panel&lt;/b&gt; does not work on Chromium 30.0.1599.114 Built on Ubuntu 13.04. &lt;/li&gt; &lt;li&gt;"Break on" inspected element is extremely useful &lt;/li&gt; &lt;/ul&gt;</description><category>chrome</category><category>debug</category><category>en</category><category>google</category><category>javascript</category><guid>http://blog.binchen.org/posts/notes-on-google-chromes-dev-tool/</guid><pubDate>Mon, 13 Jan 2014 12:32:00 GMT</pubDate></item><item><title>Tips for debug C++ code in emacs</title><link>http://blog.binchen.org/posts/tips-for-debug-c-code-in-emacs/</link><dc:creator>Chen Bin</dc:creator><description>&lt;ul&gt; &lt;li&gt;M-x gdb then M-x gdb-many-windows &lt;/li&gt; &lt;li&gt;display/call/s(tep)/n(ext)/watch in gud-mode &lt;/li&gt; &lt;li&gt;assert, use frame #num to located the failed assertion &lt;/li&gt; &lt;li&gt;windmove-down/up/left/right to move between many windows &lt;/li&gt; &lt;li&gt;winnner-mode to redo/undo windows layout &lt;/li&gt; &lt;li&gt;C-x r w to save widnows layout, C-x r j to load windows layout &lt;/li&gt; &lt;/ul&gt;</description><category>cpp</category><category>debug</category><category>emacs</category><category>gdb</category><guid>http://blog.binchen.org/posts/tips-for-debug-c-code-in-emacs/</guid><pubDate>Fri, 10 Feb 2012 13:20:52 GMT</pubDate></item><item><title>Emacs gdb/gud hotkeys</title><link>http://blog.binchen.org/posts/emacs-gdbgud-hotkeys/</link><dc:creator>Chen Bin</dc:creator><description>&lt;p&gt;Please note if you're using Emacs 24 on OS X 10.7.3, you need `M-x gud-gdb` instead `M-x gdb` to start debug session. &lt;/p&gt; &lt;p&gt; It's because `M-x gdb` assume gdb 7.x installed while there is actually only gdb 6.3 installed. &lt;/p&gt;&lt;ul&gt; &lt;li&gt;C-x C-a C-d gud-remove &lt;/li&gt; &lt;li&gt;C-x C-a C-b gud-break &lt;/li&gt; &lt;li&gt;C-x C-a C-g gud-run (customized by me) &lt;/li&gt; &lt;li&gt;C-x C-a C-p gud-print &lt;/li&gt; &lt;li&gt;C-x C-a C-r gud-continue &lt;/li&gt; &lt;/ul&gt;</description><category>debug</category><category>emacs</category><category>en</category><category>gdb</category><category>linux</category><guid>http://blog.binchen.org/posts/emacs-gdbgud-hotkeys/</guid><pubDate>Fri, 23 Dec 2011 05:26:00 GMT</pubDate></item></channel></rss>