<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chen's blog (Posts about email)</title><link>http://blog.binchen.org/</link><description></description><atom:link href="http://blog.binchen.org/categories/email.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Tue, 02 Mar 2021 13:09:31 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>dianyou 0.0.3 is out</title><link>http://blog.binchen.org/posts/dianyou-0-0-3-is-out/</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;
I created &lt;a href="https://github.com/redguardtoo/dianyou"&gt;dianyou&lt;/a&gt; (电邮) to solve improve my Gnus work flow.
&lt;/p&gt;
&lt;div id="outline-container-org59f0a3d" class="outline-2"&gt;
&lt;h3 id="org59f0a3d"&gt;Search mails&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-org59f0a3d"&gt;
&lt;p&gt;
Most Gnus users use &lt;code&gt;gnus-group-make-nnir-group&lt;/code&gt; to search mails. But it's not usable in "Summary Buffer". Its &lt;a href="https://tools.ietf.org/html/rfc3501#section-6.4.4"&gt;IMAP SEARCH Command&lt;/a&gt; is hard to use.
&lt;/p&gt;

&lt;p&gt;
It could be replaced by &lt;code&gt;dianyou-group-make-nnir-group&lt;/code&gt; which supports shortcuts. For example, you can input "f John s 1y2w2d" and select "imap" when Gnus asks the question "Imap Search in". It means search mails from John since 1 year, 2 weeks and 2 days ago.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4e53d1e" class="outline-2"&gt;
&lt;h3 id="org4e53d1e"&gt;Auto complete email address&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-org4e53d1e"&gt;
&lt;p&gt;
I'm too lazy to set up my contacts. It would be better that Gnus could &lt;b&gt;automatically&lt;/b&gt; collect email addresses from all received mails. So I created the command &lt;code&gt;dianyou-insert-email-address-from-received-mails&lt;/code&gt;. The inserted email address is also inserted into the global variable &lt;code&gt;dianyou-email-address-history&lt;/code&gt; which could be persisted by &lt;a href="https://github.com/jwiegley/session"&gt;session&lt;/a&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org6de152e" class="outline-2"&gt;
&lt;h3 id="org6de152e"&gt;Switch Gnus buffer&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-org6de152e"&gt;
&lt;p&gt;
One annoying thing in Gnus is pressing "q" will close opened folder. I often pressed "q" when I only intended to switch to another Gnus buffer. Now I can use &lt;code&gt;dianyou-switch-gnus-buffer&lt;/code&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org317126b" class="outline-2"&gt;
&lt;h3 id="org317126b"&gt;Paste image from clipboard&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-org317126b"&gt;
&lt;p&gt;
Use &lt;code&gt;dianyou-paste-image-from-clipboard&lt;/code&gt;. CLI program &lt;a href="https://github.com/astrand/xclip"&gt;xclip&lt;/a&gt; should be installed at first.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><category>email</category><category>en</category><category>gnus</category><guid>http://blog.binchen.org/posts/dianyou-0-0-3-is-out/</guid><pubDate>Tue, 04 Jun 2019 12:54:48 GMT</pubDate></item><item><title>How to use Gnus Group Topics efficiently</title><link>http://blog.binchen.org/posts/how-to-use-gnus-group-topics-efficiently/</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;
Group Topics is used to manage Gnus groups.
&lt;/p&gt;

&lt;p&gt;
For example, you can,
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Place groups (mail folders)  from Gmail into "gmail" topic&lt;/li&gt;
&lt;li&gt;Place groups (mails folders) from Outlook.com into "hotmail" topic&lt;/li&gt;
&lt;li&gt;Make "gmail" and "hotmail" belong to the root topic "Gnus"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Enable it is just one line,
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(add-hook 'gnus-group-mode-hook 'gnus-topic-mode)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
Now comes the question how to delete/add/move the topics?
&lt;/p&gt;

&lt;p&gt;
The official answer is to read &lt;a href="http://www.gnu.org/software/emacs/manual/html_node/gnus/Topic-Commands.html#Topic-Commands"&gt;its manual&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
But there is a &lt;b&gt;simpler solution&lt;/b&gt;. All you need to do is insert below code into ~/.emacs or ~/.gnus.el,
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(with-eval-after-load 'gnus-topic
  (setq gnus-topic-topology '(("Gnus" visible)
                              (("hotmail" visible nil nil))
                              (("gmail" visible nil nil))))

  (setq gnus-topic-alist '(("hotmail" ; the key of topic
                            "nnimap+hotmail:Inbox"
                            "nnimap+hotmail:Drafts"
                            "nnimap+hotmail:Sent"
                            "nnimap+hotmail:Junk"
                            "nnimap+hotmail:Deleted")
                           ("gmail" ; the key of topic
                            "INBOX"
                            "[Gmail]/Sent Mail"
                            "[Gmail]/Trash"
                            "Drafts")
                           ("Gnus"))))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
The &lt;b&gt;management of topics is as easy as editing above code&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
My setup always works no matter ~/.newsrc.eld is loaded or not.
&lt;/p&gt;

&lt;p&gt;
BTW, "hotmail" and "gmail" are the keys you used when configuring IMAP accounts,
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(setq gnus-select-method
             '(nnimap "gmail" ; key
                      (nnimap-address "imap.gmail.com")
                      (nnimap-server-port 993)
                      (nnimap-stream ssl)))
(add-to-list 'gnus-secondary-select-methods
             '(nnimap "hotmail" ; key
                      (nnimap-address "imap-mail.outlook.com")
                      (nnimap-server-port 993)
                      (nnimap-stream ssl)))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><category>email</category><category>en</category><category>gmail</category><category>gnus</category><guid>http://blog.binchen.org/posts/how-to-use-gnus-group-topics-efficiently/</guid><pubDate>Sun, 10 Jan 2016 05:36:49 GMT</pubDate></item><item><title>Why Gnus is better than Gmail</title><link>http://blog.binchen.org/posts/why-gnus-is-better-than-gmail/</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;
Here is my use case. My agent notify me that there is a potential contract from a company named "FF".
&lt;/p&gt;

&lt;p&gt;
My first reaction is to reply the email with "Great! Please forward my CV".
&lt;/p&gt;

&lt;p&gt;
Before I press the "Send" button, it occurs to me that other agents have possibly &lt;b&gt;already&lt;/b&gt; submitted my CV to FF since it is a big organization. I need double check.
&lt;/p&gt;

&lt;p&gt;
I save current email as draft, search all the mails containing "FF" and forward them to the original email I've not sent yet. Then my agent could figure out whether other guys have already represented me for the same opportunity.
&lt;/p&gt;

&lt;p&gt;
This operation is doable in desktop application like Outlook. I need search emails in a new dialog box. Select emails. Then drag them to the original email.
&lt;/p&gt;

&lt;p&gt;
It's hard to do this thing in Gmail.
&lt;/p&gt;

&lt;p&gt;
In Emacs, the job can be done easily:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Step 1, Switch to Groups buffer (the buffer which lists email folder). press key &lt;code&gt;G G&lt;/code&gt; or run command &lt;code&gt;M-x gnus-group-make-nnir-group&lt;/code&gt;, input the keyword "FF" to start search&lt;/li&gt;
&lt;li&gt;Step 2, Mark the emails I want to forward with hot key &lt;code&gt;#&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Step 3, Press key &lt;code&gt;C-c C-f&lt;/code&gt; or run command &lt;code&gt;M-x gnus-summary-mail-forward&lt;/code&gt;. A new buffer is created. It contains a big chuck of xml string wrapped by either "&amp;lt;#multipart&amp;gt;" tag or "&amp;lt;#mml&amp;gt;" tag.&lt;/li&gt;
&lt;li&gt;Step 4, Select and copy that string into you original email. Done!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Step 4 could be improved.
&lt;/p&gt;

&lt;p&gt;
Insert below code into &lt;code&gt;~/.emacs&lt;/code&gt;:
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(defun message-select-forwarded-email-tags ()
  "Select the &amp;lt;#mml-or-what-ever&amp;gt; tags in message-mode."
  (interactive)
  (let (start rlt)
    (when (search-forward "&amp;lt;#")
      (setq start (point))
      (push-mark (point) t t)
      (goto-char (point-max))
      (search-backward "&amp;gt;")
      (forward-char)
      (setq rlt t))
    rlt))

(defun message-copy-select-forwarded-email-tags ()
  "Copy the &amp;lt;#mml-or-what-ever&amp;gt; tags in message-mode."
  (interactive)
  (save-excursion
    (cond
     ((message-select-forwarded-email-tags)
      (copy-region-as-kill (region-beginning) (region-end))
      (message "forwarded email tags copied!"))
     (t (message "NO forwarded email tags found!")))))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
All you need is "M-x message-copy-select-forwarded-email-tags" to copy the tags into kill-ring.
&lt;/p&gt;

&lt;p&gt;
UPDATE:
This is only a case study. My complete guide on Gnus is at &lt;a href="http://blog.binchen.org/posts/notes-on-using-gnus.html"&gt;http://blog.binchen.org/posts/notes-on-using-gnus.html&lt;/a&gt;.
&lt;/p&gt;&lt;/div&gt;</description><category>emacs</category><category>email</category><category>en</category><category>gnus</category><guid>http://blog.binchen.org/posts/why-gnus-is-better-than-gmail/</guid><pubDate>Wed, 30 Apr 2014 12:46:31 GMT</pubDate></item><item><title>Use Gnus to apply patch sent by `git send-email`</title><link>http://blog.binchen.org/posts/use-gnus-to-apply-patch-sent-by-git-send-email/</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;div id="outline-container-orga01db47" class="outline-2"&gt;
&lt;h3 id="orga01db47"&gt;Setup git-send-email&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-orga01db47"&gt;
&lt;p&gt;
On Debian run &lt;code&gt;sudo apt-get install git-email&lt;/code&gt; to install git command line tools.
&lt;/p&gt;

&lt;p&gt;
Then run &lt;code&gt;cpan Authen::SASL MIME::Base64 Net::SMTP::SSL&lt;/code&gt; to install perl packages (check &lt;a href="https://www.cpan.org/modules/INSTALL.html"&gt;cpan howto&lt;/a&gt;).
&lt;/p&gt;

&lt;p&gt;
Modify &lt;code&gt;~/.gitconfig&lt;/code&gt; to use Gmail SMTP:
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-ini"&gt;[sendemail]
    smtpencryption = tls
    smtpserver = smtp.gmail.com
    smtpuser = username@gmail.com
    smtpserverport = 587
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org814548b" class="outline-2"&gt;
&lt;h3 id="org814548b"&gt;Send the latest commit&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-org814548b"&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-sh"&gt;# send one commit
git send-email -1 --annotate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0deb926" class="outline-2"&gt;
&lt;h3 id="org0deb926"&gt;Apply patch&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-org0deb926"&gt;
&lt;p&gt;
Select one mail. Run command "M-x gnus-summary-save-article-email" whose short key is "O m" in summary buffer.
&lt;/p&gt;

&lt;p&gt;
Emacs will ask for directory to save that patch. Say I save it as &lt;code&gt;~/News/patch/hello.patch&lt;/code&gt;.
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-sh"&gt;git am ~/News/patch/hello.patch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org58ee76f" class="outline-2"&gt;
&lt;h3 id="org58ee76f"&gt;Syntax highlight patch embedded in mail (OPTIONAL)&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-org58ee76f"&gt;
&lt;p&gt;
Use &lt;a href="https://github.com/redguardtoo/emacs.d/blob/master/site-lisp/gnus-article-treat-patch/gnus-article-treat-patch.el"&gt;gnus-article-treat-patch.el&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Add below code to setup: 
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(require 'gnus-article-treat-patch)
(setq gnus-article-patch-conditions
      '( "^@@ -[0-9]+,[0-9]+ \\+[0-9]+,[0-9]+ @@" ))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><category>email</category><category>en</category><category>git</category><category>gnus</category><category>patch</category><guid>http://blog.binchen.org/posts/use-gnus-to-apply-patch-sent-by-git-send-email/</guid><pubDate>Sat, 07 Sep 2013 00:00:00 GMT</pubDate></item><item><title>Use `git send-email' at ubuntu</title><link>http://blog.binchen.org/posts/use-git-send-email-at-ubuntu/</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt; When I try to use `git send-email' at ubuntu 13.04, I get error message some perl modules are missing. &lt;/p&gt;  &lt;p&gt; So here is one line command to install all missing perl modules: &lt;/p&gt; &lt;div class="org-src-container"&gt;&lt;br&gt;
&lt;pre class="prettyprint "&gt;
&lt;p&gt;sudo cpan Error Net:SMTP:SSL MIME::Base64 Authen::SASL&lt;/p&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;&lt;/div&gt; &lt;/div&gt;</description><category>email</category><category>en</category><category>git</category><guid>http://blog.binchen.org/posts/use-git-send-email-at-ubuntu/</guid><pubDate>Thu, 15 Aug 2013 08:24:21 GMT</pubDate></item><item><title>How to get email from exchange server without Outlook</title><link>http://blog.binchen.org/posts/how-to-get-email-from-exchange-server-without-outlook/</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;
This article has three parts. 
&lt;/p&gt;

&lt;p&gt;
First part explains setup of mail gateway &lt;a href="http://davmail.sourceforge.net/"&gt;DavMail&lt;/a&gt; for Exchange server.
&lt;/p&gt;

&lt;p&gt;
Second part uses &lt;a href="https://www.mozilla.org/en-US/thunderbird/"&gt;thunderbird&lt;/a&gt; to fetch mails from Davmail.
&lt;/p&gt;

&lt;p&gt;
Third part uses Emacs and Gnus to replace thunderbird. It's optional.
&lt;/p&gt;
&lt;div id="outline-container-org1eefbda" class="outline-2"&gt;
&lt;h3 id="org1eefbda"&gt;DavMail as mail gateway&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-org1eefbda"&gt;
&lt;pre class="example"&gt;
Ever wanted to get rid of Outlook ? DavMail is a POP/IMAP/SMTP/Caldav/Carddav/LDAP exchange gateway allowing users to use any mail/calendar client (e.g. Thunderbird with Lightning or Apple iCal) with an Exchange server.
&lt;/pre&gt;
&lt;/div&gt;
&lt;div id="outline-container-org314c837" class="outline-3"&gt;
&lt;h4 id="org314c837"&gt;Install&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-org314c837"&gt;
&lt;p&gt;
&lt;a href="http://davmail.sourceforge.net/download.html"&gt;Download the installer&lt;/a&gt; at Debian/Ubuntu/Mint:
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-sh"&gt;sudo apt-get install libswt-gtk-3-jni libswt-gtk-3-java libswt-cairo-gtk-3-jni
# ubuntu/debian only; for other distribution, just download src package
sudo dpkg -i davmail_4.5.1-2303-1_all.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
Installation is easy. DavMail by itself is a portable java application. Since its GUI is dependent on SWT. So I give the instruction on how to install SWT in ubuntu. If you don't use ubuntu, then you are already technically good enough to know how to install SWT.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgba5ab01" class="outline-3"&gt;
&lt;h4 id="orgba5ab01"&gt;Configuration&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-orgba5ab01"&gt;
&lt;p&gt;
Now start DavMail. 
&lt;/p&gt;

&lt;p&gt;
Please input the web Outlook url like "&lt;a href="https://webmail.mycompany.com.au/owa/"&gt;https://webmail.mycompany.com.au/owa/&lt;/a&gt;" in its GUI.
&lt;/p&gt;

&lt;p&gt;
By default all the services are &lt;b&gt;NOT&lt;/b&gt; encrypted. It makes sense because email client and gateway are at the same computer.
&lt;/p&gt;

&lt;p&gt;
Write down the port numbers. In my case, I need port number of IMAP/POP3/SMTP.
&lt;/p&gt;

&lt;p&gt;
That's all you need to do unless DavMail can't detect your Exchange server automatically!
&lt;/p&gt;

&lt;p&gt;
If Exchange server uses un-conventional EWS URL, you need find the URL &lt;b&gt;manually&lt;/b&gt; with &lt;a href="http://ewseditor.codeplex.com/"&gt;EWSEditor&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
For example, my EWS URL is &lt;code&gt;https://my-company.local/EWS/Exchange.asmx&lt;/code&gt;. In DavMail, input that URL in "Main -&amp;gt; OWA (Exchange) URL" and force the "Exchange Protocol" into "EWS".
&lt;/p&gt;

&lt;p&gt;
BTW, &lt;a href="https://outlook.office365.com/"&gt;https://outlook.office365.com/&lt;/a&gt; EWS URL is &lt;code&gt;https://outlook.office365.com/EWS/Exchange.asmx&lt;/code&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgedf960b" class="outline-2"&gt;
&lt;h3 id="orgedf960b"&gt;Thunderbird&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-orgedf960b"&gt;
&lt;p&gt;
Create a new account, and &lt;b&gt;manually&lt;/b&gt; configure the server. The server name is "127.0.0.1", the port number is already on your paper. The minimum setup needs IMAP port to  receive mail and SMTP port to send email.
&lt;/p&gt;

&lt;p&gt;
You don't need care about ssl stuff, let thunderbird handle it. But if you get the error message like "BAD command authentication required" in davmail's log, modify setup in "Account Settings -&amp;gt; Server Settings -&amp;gt; Security Settings -&amp;gt; Connection Settings". Select "None".
&lt;/p&gt;

&lt;p&gt;
The only issue is the "Username". You can log in Outlook Web UI, click "Options -&amp;gt; Change Password". The user name is displayed above the first input box. Please note the full user name may include the work domain.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb74a39b" class="outline-2"&gt;
&lt;h3 id="orgb74a39b"&gt;Emacs Gnus&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-orgb74a39b"&gt;
&lt;p&gt;
Gnus cannot access IMAP service of DavMail. There is &lt;a href="http://permalink.gmane.org/gmane.emacs.gnus.general/83301"&gt;some bug&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
So we have to turn to POP3. Check &lt;a href="http://www.emacswiki.org/emacs/GnusTutorial"&gt;documentation&lt;/a&gt; at EmacsWiki.
&lt;/p&gt;

&lt;p&gt;
If you use POP3, don NOT delete mails on server. You &lt;b&gt;must&lt;/b&gt; set the variable "pop3-leave-mail-on-server" to true!
&lt;/p&gt;

&lt;p&gt;
Insert below code into your ~/.emacs:
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;;; gnus+davmail bug, so I have to use pop3 for DavMail
;; http://permalink.gmane.org/gmane.emacs.gnus.general/83301
;; but delete all the mails on server is scary
(setq pop3-leave-mail-on-server t)

(add-to-list 'gnus-secondary-select-methods '(nnml "mycompany"))
(setq mail-sources
      '((pop :server "127.0.0.1" ;; DavMail is running at localhost
         :port 1110
         :user "username"
         :password "password"
         :stream network))) ;; by default, DavMail don't encrypt mail
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
Since I've got many mails in INBOX folder, POP3 could take some time to get them. In worst cases, IT administrator may block DavMail access because it relay too many requests from Gnus! The solution is to use another IMAP client like thunderbird to clean up the INBOX folder before start Gnus.
&lt;/p&gt;

&lt;p&gt;
Another tip is when opening a folder in Gnus, press &lt;code&gt;C-u ENTER&lt;/code&gt; instead of &lt;code&gt;ENTER&lt;/code&gt; key. &lt;code&gt;C-u&lt;/code&gt; here means display all the read &lt;b&gt;and unread mails&lt;/b&gt;. It's awkward when product manager ask you open an important mail but that mail is invisible because it's marked READ. Check my article &lt;a href="https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/gnus-guide-en.org"&gt;Practical guide to use Gnus with Gmail&lt;/a&gt; for more tips.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><category>email</category><category>en</category><category>gnus</category><category>imap</category><category>linux</category><category>outlook</category><guid>http://blog.binchen.org/posts/how-to-get-email-from-exchange-server-without-outlook/</guid><pubDate>Tue, 06 Aug 2013 20:26:00 GMT</pubDate></item><item><title>How to use yasnippets to produce email templates in Emacs</title><link>http://blog.binchen.org/posts/how-to-use-yasnippets-to-produce-email-templates-in-emacs/</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;
CREATED: &lt;span class="timestamp-wrapper"&gt;&lt;span class="timestamp"&gt;&amp;lt;2013-05-01 Wed&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;
UPDATED: &lt;span class="timestamp-wrapper"&gt;&lt;span class="timestamp"&gt;&amp;lt;2015-11-13 Fri&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/p&gt;

&lt;div id="outline-container-orgfb15e26" class="outline-2"&gt;
&lt;h3 id="orgfb15e26"&gt;Problem&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-orgfb15e26"&gt;
&lt;p&gt;
As a freelancer, I need reply agent's email frequently.
&lt;/p&gt;

&lt;p&gt;
So I have several issues to resolve:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Avoid writing multiple mails with similar content&lt;/li&gt;
&lt;li&gt;Avoid attaching same resume again and again&lt;/li&gt;
&lt;li&gt;Get the agent's name right. This is not easy since I'm living in Sydney&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org93cf6da" class="outline-2"&gt;
&lt;h3 id="org93cf6da"&gt;Solution&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-org93cf6da"&gt;
&lt;p&gt;
&lt;a href="https://github.com/capitaomorte/yasnippet"&gt;Yasnippet&lt;/a&gt; is the best solution for email templates because you can embed Lisp code in the template.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf0879cc" class="outline-3"&gt;
&lt;h4 id="orgf0879cc"&gt;Templates&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-orgf0879cc"&gt;
&lt;p&gt;
I publicize my .emacs.d at &lt;a href="https://github.com/redguardtoo/emacs.d"&gt;github&lt;/a&gt;. But email templates are my private stuff. So I place them in different location.
&lt;/p&gt;

&lt;p&gt;
That's why I place templates at ~/my-yasnippets/message-mode/.
&lt;/p&gt;

&lt;p&gt;
Here is a sample template to reply my agents (jobok.yasnippet):
&lt;/p&gt;
&lt;pre class="example"&gt;
# -*- mode: snippet -*-
# name: email for OK job
# key: jobok
# --
Hi ${1:`(my-yas-get-first-name-from-to-field)`},

Thank you very much for providing me this great opportunity.

Unfortunately I'm occupied now and will not consider new job for the time being.

Currently I'm working for ${2:COMPANY_NAME} as a contract developer. However, the
contract will be over ${3:END_OF_CONTRACT} and I will be available then.

So keep in touch.

Attached is my latest CV.
$0

&amp;lt;#part type="application/msword" filename="~/org/cv/cv.doc" disposition=attachment description=resume&amp;gt;
&amp;lt;#/part&amp;gt;
&lt;/pre&gt;

&lt;p&gt;
`(my-yas-get-first-name-from-to-field)` is a Lisp function embedded in the snippet.
&lt;/p&gt;

&lt;p&gt;
It will automatically fetch the first name of agent,
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(defun my-yas-get-first-name-from-to-field ()
  (let ((rlt "AGENT_NAME") str)
    (save-excursion
      (goto-char (point-min))
      ;; first line in email could be some hidden line containing NO to field
      (setq str (buffer-substring-no-properties (point-min) (point-max))))
    (if (string-match "^To: \"\\([^ ,]+\\)" str)
        (setq rlt (match-string 1 str)))
    (message "rlt=%s" rlt)
    rlt))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4c62c25" class="outline-3"&gt;
&lt;h4 id="org4c62c25"&gt;Emacs setup&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-org4c62c25"&gt;
&lt;p&gt;
Add following code into .emacs to make yasnippet load the emacs templates:
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(require 'yasnippet)
(setq my-yasnippets (expand-file-name "~/my-yasnippets"))
(if (and  (file-exists-p my-yasnippets) (not (member my-yasnippets yas-snippet-dirs)))
    (add-to-list 'yas-snippet-dirs my-yasnippets))
;; yasnippet setup code should be AFTER
(yas-global-mode 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><category>email</category><category>en</category><guid>http://blog.binchen.org/posts/how-to-use-yasnippets-to-produce-email-templates-in-emacs/</guid><pubDate>Wed, 01 May 2013 15:53:08 GMT</pubDate></item><item><title>Simplest workflow on email git commit in Emacs (No magit needed)</title><link>http://blog.binchen.org/posts/simplest-workflow-on-email-git-commit-in-emacs-no-magit-needed/</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Sometimes I just want to email my trivial patch to the original author and forget it. In this case "github fork" or "git format-patch" is too heavy weight for me. &lt;/p&gt; &lt;p&gt; So here is the simplest workflow I can figure out: &lt;/p&gt;&lt;ul&gt; &lt;li&gt;Step 1, command "M-x vc-dir" whose hotkey is "C-x v d" &lt;/li&gt; &lt;li&gt;Step 2, command "M-x git-print-log" whose hotkey is "C-x v l" &lt;/li&gt; &lt;li&gt;Step 3, Move focus to the specific commit and run command "M-x log-view-diff" whose hotkey is "d". &lt;/li&gt; &lt;li&gt;Step 4, Yank the commit/diff &lt;/li&gt; &lt;li&gt;Step 5, Compose new email (command "M-x compose-mail" whose hotkey is "C-x m") &lt;/li&gt; &lt;li&gt;Step 6, Make sure the subject of email start with "[PATCH]". See &lt;a href="http://linuxtv.org/wiki/index.php/Development:_How_to_submit_patches"&gt;this patch sumbit guide&lt;/a&gt; for reasons. &lt;/li&gt; &lt;li&gt;Step 7, Paste the content of commit/diff into email body. &lt;/li&gt; &lt;li&gt;Step 8, Send the email by command "M-x message-send-and-exit" whose hotkey is "C-c C-c" &lt;/li&gt; &lt;/ul&gt;   &lt;p&gt; Please note: &lt;/p&gt;&lt;ul&gt; &lt;li&gt;Step 1 is usually necessary unless you only need the diff of current file. &lt;/li&gt; &lt;li&gt;Step 2 and step 3 could be replaced with command "M-x vc-diff" or hotkey "C-x v =" if you want to email the diff of work directory. &lt;/li&gt; &lt;/ul&gt;  &lt;/div&gt;</description><category>emacs</category><category>email</category><category>en</category><category>git</category><category>patch</category><guid>http://blog.binchen.org/posts/simplest-workflow-on-email-git-commit-in-emacs-no-magit-needed/</guid><pubDate>Sun, 27 Jan 2013 15:51:00 GMT</pubDate></item><item><title>Use POPFile at Linux</title><link>http://blog.binchen.org/posts/use-popfile-at-linux/</link><dc:creator>Chen Bin</dc:creator><description>&lt;div&gt;&lt;p&gt;
CREATED: &lt;span class="timestamp-wrapper"&gt;&lt;span class="timestamp"&gt;&amp;lt;2012-12-28 Fri&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;
UPDATED: &lt;span class="timestamp-wrapper"&gt;&lt;span class="timestamp"&gt;&amp;lt;2017-03-12 Sun&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;a href="http://getpopfile.org"&gt;POPFile&lt;/a&gt; automatically sorts emails.
&lt;/p&gt;

&lt;div id="outline-container-orgf30a1c6" class="outline-2"&gt;
&lt;h3 id="orgf30a1c6"&gt;Install POPFile&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-orgf30a1c6"&gt;
&lt;p&gt;
&lt;a href="http://getpopfile.org/docs/download"&gt;Download and extract cross-platform version&lt;/a&gt; to &lt;code&gt;~/bin/popfile/&lt;/code&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc0272fa" class="outline-2"&gt;
&lt;h3 id="orgc0272fa"&gt;Install third party packages&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-orgc0272fa"&gt;
&lt;p&gt;
Run:
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-sh"&gt;cpan DBD::SQLite DBI Date::Format Date::Parse HTML::Tagset HTML::Template IO::Socket::SSL Net::IDN::Encode Mozilla::CA Encode:IMAPUTF7
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
When being asked by cpan, say you prefer installing local lib.
&lt;/p&gt;

&lt;p&gt;
My cpan configuration &lt;code&gt;~/.cpan/CPAN/MyConfig.pm&lt;/code&gt;,
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-perl"&gt;$CPAN::Config = {
  'applypatch' =&amp;gt; q[],
  'auto_commit' =&amp;gt; q[0],
  'build_cache' =&amp;gt; q[100],
  'build_dir' =&amp;gt; q[/home/cb/.cpan/build],
  'build_dir_reuse' =&amp;gt; q[0],
  'build_requires_install_policy' =&amp;gt; q[yes],
  'bzip2' =&amp;gt; q[/bin/bzip2],
  'cache_metadata' =&amp;gt; q[1],
  'check_sigs' =&amp;gt; q[0],
  'colorize_output' =&amp;gt; q[0],
  'commandnumber_in_prompt' =&amp;gt; q[1],
  'connect_to_internet_ok' =&amp;gt; q[1],
  'cpan_home' =&amp;gt; q[/home/cb/.cpan],
  'ftp_passive' =&amp;gt; q[1],
  'ftp_proxy' =&amp;gt; q[],
  'getcwd' =&amp;gt; q[cwd],
  'gpg' =&amp;gt; q[/usr/bin/gpg],
  'gzip' =&amp;gt; q[/bin/gzip],
  'halt_on_failure' =&amp;gt; q[0],
  'histfile' =&amp;gt; q[/home/cb/.cpan/histfile],
  'histsize' =&amp;gt; q[100],
  'http_proxy' =&amp;gt; q[],
  'inactivity_timeout' =&amp;gt; q[0],
  'index_expire' =&amp;gt; q[90],
  'inhibit_startup_message' =&amp;gt; q[0],
  'keep_source_where' =&amp;gt; q[/home/cb/.cpan/sources],
  'load_module_verbosity' =&amp;gt; q[none],
  'make' =&amp;gt; q[/usr/bin/make],
  'make_arg' =&amp;gt; q[],
  'make_install_make_command' =&amp;gt; q[/usr/bin/make],
  'mbuild_arg' =&amp;gt; q[--install-dirs site],
  'mbuild_install_arg' =&amp;gt; q[./Build],
  'mbuild_install_build_command' =&amp;gt; q[./Build],
  'mbuildpl_arg' =&amp;gt; q[--installdirs site],
  'no_proxy' =&amp;gt; q[],
  'pager' =&amp;gt; q[/usr/bin/less],
  'patch' =&amp;gt; q[/usr/bin/patch],
  'perl5lib_verbosity' =&amp;gt; q[none],
  'prefer_external_tar' =&amp;gt; q[1],
  'prefer_installer' =&amp;gt; q[MB],
  'prefs_dir' =&amp;gt; q[/home/cb/.cpan/prefs],
  'prerequisites_policy' =&amp;gt; q[follow],
  'recommends_policy' =&amp;gt; q[1],
  'scan_cache' =&amp;gt; q[atstart],
  'shell' =&amp;gt; q[/bin/bash],
  'show_unparsable_versions' =&amp;gt; q[0],
  'show_upload_date' =&amp;gt; q[0],
  'show_zero_versions' =&amp;gt; q[0],
  'suggests_policy' =&amp;gt; q[0],
  'tar' =&amp;gt; q[/bin/tar],
  'tar_verbosity' =&amp;gt; q[none],
  'term_is_latin' =&amp;gt; q[1],
  'term_ornaments' =&amp;gt; q[1],
  'test_report' =&amp;gt; q[0],
  'trust_test_report_history' =&amp;gt; q[0],
  'unzip' =&amp;gt; q[/usr/bin/unzip],
  'urllist' =&amp;gt; [q[http://mirror.optusnet.com.au/CPAN/]],
  'use_prompt_default' =&amp;gt; q[0],
  'use_sqlite' =&amp;gt; q[0],
  'version_timeout' =&amp;gt; q[15],
  'wget' =&amp;gt; q[/usr/bin/wget],
  'yaml_load_code' =&amp;gt; q[0],
  'yaml_module' =&amp;gt; q[YAML],
};
__END__
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
&lt;code&gt;cpan&lt;/code&gt; will append setup into &lt;code&gt;~/.bashrc&lt;/code&gt;,
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-sh"&gt;PATH="$HOME/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="$HOME/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="$HOME/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"$HOME/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=$HOME/perl5"; export PERL_MM_OPT;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
Double check installed packages:
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-sh"&gt;perl -MDBI -e 'print $MIME::DBI::VERSION'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
If there is any error:
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-sh"&gt;perl -V
rm -rf ~/perl5/*
cpan DBD::SQLite DBI Date::Format Date::Parse HTML::Tagset HTML::Template IO::Socket::SSL Net::IDN::Encode MOZILLA::CA
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgfa9204d" class="outline-2"&gt;
&lt;h3 id="orgfa9204d"&gt;Setup&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-orgfa9204d"&gt;
&lt;p&gt;
I only use IMAP. The purpose of tweak POP3 port is only to make the program executable without root permission.
&lt;/p&gt;

&lt;p&gt;
See &lt;a href="http://getpopfile.org/docs/howtos:mayneedroot"&gt;http://getpopfile.org/docs/howtos:mayneedroot&lt;/a&gt; for details.
&lt;/p&gt;

&lt;p&gt;
Run the below command to fix the root issue.
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-sh"&gt;sed -i 's/pop3_port \+110/pop3_port 1110/g' ~/bin/popfile/popfile.cfg
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;
Davmail is a gateway to convert Outlook/Exchange service to IMAP/POP3). It's required if and only if you use Microsoft's Exchange/Outlook.
&lt;/p&gt;

&lt;p&gt;
If you don't use Davmail and fetch mails directly, you'd better set &lt;code&gt;imap_expunge 1&lt;/code&gt; to fix &lt;a href="http://getpopfile.org/discussion/1/550/2144"&gt;Microsoft Office 365 issue&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Please disable ssl if running local Davmail Server only. Or else, ssl should be enabled.
&lt;/p&gt;

&lt;p&gt;
My popfile setup,
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-ini"&gt;bayes_bad_sqlite_version 4.0.0
bayes_corpus corpus
bayes_database popfile.db
bayes_dbauth 
bayes_dbconnect dbi:SQLite:dbname=$dbname
bayes_dbuser 
bayes_hostname 192-168-1-3.tpgi.com.au
bayes_localhostname 
bayes_nihongo_parser kakasi
bayes_sqlite_journal_mode delete
bayes_sqlite_tweaks 4294967295
bayes_subject_mod_left [
bayes_subject_mod_pos 1
bayes_subject_mod_right ]
bayes_unclassified_weight 100
bayes_xpl_angle 0
config_pidcheck_interval 5
config_piddir ./
GLOBAL_debug 1
GLOBAL_last_update_check 1407715200
GLOBAL_message_cutoff 100000
GLOBAL_msgdir messages/
GLOBAL_ssl_verify_peer_certs 0
GLOBAL_timeout 60
GLOBAL_update_check 1
history_archive 0
history_archive_classes 0
history_archive_dir archive
history_history_days 2
html_cache_templates 0
html_column_characters 0
html_columns +inserted,+from,+to,-cc,+subject,-date,-size,+bucket
html_date_format 
html_language English
html_last_reset Sat Dec  1 11:06:48 2012
html_local 0
html_page_size 20
html_password b6b3637136ad630eba43aa5ee7106780
html_port 8888
html_search_filter_highlight 0
html_send_stats 1
html_session_dividers 1
html_show_bucket_help 1
html_show_training_help 0
html_skin simplyblue
html_strict_templates 0
html_test_language 0
html_wordtable_format 
imap_bucket_folder_mappings job--&amp;gt;job--&amp;gt;geek--&amp;gt;geek--&amp;gt;business--&amp;gt;business--&amp;gt;ad--&amp;gt;ad--&amp;gt;unclassified--&amp;gt;INBOX--&amp;gt;work--&amp;gt;work--&amp;gt;
imap_enabled 1
imap_expunge 1
imap_hostname localhost
imap_login binc1
imap_password password1
imap_port 1143
imap_training_mode 0
imap_uidnexts work--&amp;gt;749--&amp;gt;job--&amp;gt;5914--&amp;gt;INBOX--&amp;gt;20736--&amp;gt;geek--&amp;gt;5009--&amp;gt;ad--&amp;gt;1296--&amp;gt;business--&amp;gt;15--&amp;gt;
imap_uidvalidities job--&amp;gt;98--&amp;gt;work--&amp;gt;107--&amp;gt;ad--&amp;gt;100--&amp;gt;business--&amp;gt;106--&amp;gt;geek--&amp;gt;99--&amp;gt;INBOX--&amp;gt;2--&amp;gt;
imap_update_interval 1000
imap_use_ssl 0
imap_watched_folders INBOX--&amp;gt;INBOX--&amp;gt;
logger_format default
logger_level 0
logger_logdir ./
nntp_enabled 0
nntp_force_fork 1
nntp_headtoo 0
nntp_local 1
nntp_port 119
nntp_separator :
nntp_socks_port 1080
nntp_socks_server 
nntp_welcome_string NNTP POPFile (v1.1.3) server ready
pop3_enabled 0
pop3_force_fork 1
pop3_local 1
pop3_port 1110
pop3_secure_port 110
pop3_secure_server 
pop3_separator :
pop3_socks_port 1080
pop3_socks_server 
pop3_toptoo 0
pop3_welcome_string POP3 POPFile (v1.1.3) server ready
smtp_chain_port 25
smtp_chain_server 
smtp_enabled 0
smtp_force_fork 1
smtp_local 1
smtp_port 25
smtp_socks_port 1080
smtp_socks_server 
smtp_welcome_string SMTP POPFile (v1.1.3) welcome
xmlrpc_enabled 0
xmlrpc_local 1
xmlrpc_port 8081
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
The only remaining issue is user name. If it contains "\", you should replace it with "\\" when inputting in Popfile!
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1fa5a11" class="outline-2"&gt;
&lt;h3 id="org1fa5a11"&gt;Run the program&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-org1fa5a11"&gt;
&lt;p&gt;
See &lt;a href="http://getpopfile.org/docs/howtos:runlocation"&gt;http://getpopfile.org/docs/howtos:runlocation&lt;/a&gt; for details.
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-sh"&gt;cd ~/bin/popfile;perl popfile.pl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd921290" class="outline-2"&gt;
&lt;h3 id="orgd921290"&gt;Start the POPFile automatically when bash login&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-orgd921290"&gt;
&lt;p&gt;
Insert below code in ~/.bashrc:
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-sh"&gt;OS_NAME=`uname -s`
if [ $OS_NAME == Linux ]; then
   # start popfile
   if [ -f $HOME/bin/popfile/popfile.pl ]; then
      # @see http://getpopfile.org/docs/howtos:runlocation
      pop_pid=`ps -ef | grep perl | grep popfile.pl | gawk '{print $2}'`
      if [ "${pop_pid}" = "" ] ; then
         cd $HOME/bin/popfile
         perl popfile.pl &amp;gt;&amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
      fi
      cd $HOME
   fi
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org177fffe" class="outline-2"&gt;
&lt;h3 id="org177fffe"&gt;Start the POPFile systemd service as a user (OPTIONAL)&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-org177fffe"&gt;
&lt;p&gt;
My user name is cb. Put popfile.service in &lt;i&gt;usr/lib/systemd/system&lt;/i&gt;. Then run `systemctl enable popfile` to install service. Run `systemctl start popfile` to start the service. My Linux distribution is ArchLinux.
&lt;/p&gt;

&lt;p&gt;
here is content of popfile.service.
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-ini"&gt;[Unit]
Description=POPFile (Automatic Email Classification) Service

[Service]
WorkingDirectory=/home/cb/bin/popfile
ExecStart=/usr/bin/perl popfile.pl
User=cb

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbf2398a" class="outline-2"&gt;
&lt;h3 id="orgbf2398a"&gt;Backup&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-orgbf2398a"&gt;
&lt;p&gt;
Please backup popfile.cfg and popfile.db.
&lt;/p&gt;

&lt;p&gt;
See &lt;a href="http://getpopfile.org/docs/howtos:backup"&gt;http://getpopfile.org/docs/howtos:backup&lt;/a&gt; for details.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org19c5f17" class="outline-2"&gt;
&lt;h3 id="org19c5f17"&gt;Summary&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-org19c5f17"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Portable&lt;/li&gt;
&lt;li&gt;No root privilege needed&lt;/li&gt;
&lt;li&gt;No X windows needed. I can manage mails in remote shell&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>email</category><category>en</category><category>filter</category><category>linux</category><category>popfile</category><category>spam</category><guid>http://blog.binchen.org/posts/use-popfile-at-linux/</guid><pubDate>Fri, 28 Dec 2012 09:18:54 GMT</pubDate></item><item><title>Practical guide to use Gnus with Gmail</title><link>http://blog.binchen.org/posts/notes-on-using-gnus/</link><dc:creator>Chen Bin</dc:creator><description>&lt;p&gt;
The article is moved to &lt;a href="https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/gnus-guide-en.org"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</description><category>emacs</category><category>email</category><category>gmail</category><category>gnus</category><guid>http://blog.binchen.org/posts/notes-on-using-gnus/</guid><pubDate>Fri, 12 Oct 2012 17:14:00 GMT</pubDate></item></channel></rss>