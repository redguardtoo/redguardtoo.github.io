<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chen's blog (Posts about scm)</title><link>http://blog.binchen.org/</link><description></description><atom:link href="http://blog.binchen.org/categories/scm.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Tue, 21 Nov 2023 12:56:23 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Perforce Tip: how to apply my default change to the release branch</title><link>http://blog.binchen.org/posts/perforce-tip-how-to-apply-my-default-change-to-the-release-branch/</link><dc:creator>Chen Bin</dc:creator><description>&lt;div id="outline-container-orgd89da54" class="outline-2"&gt;
&lt;h3 id="orgd89da54"&gt;Reasons I need this hack&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-orgd89da54"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Our current project uses mix platforms (WIN64/Linux64), so the file path contains backward slash &lt;code&gt;\&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;My p4 CLI program is from Windows installer because Cygwin version has the slash issue.&lt;/li&gt;
&lt;li&gt;Windows version of p4 has no such issue under Cygwin if we only feed it relative path.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org28ffef3" class="outline-2"&gt;
&lt;h3 id="org28ffef3"&gt;How to?&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-org28ffef3"&gt;
&lt;p&gt;
Create the patch,
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-sh"&gt;p4 diff -du -db main-branch/... &amp;gt; ~/mywork.patch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
Go to the work directory of release branch.
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-sh"&gt;cd dir-release-branch/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
&lt;code&gt;p4 edit&lt;/code&gt; the files I want to patch under release branch.
Please note,
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;lsdiff&lt;/code&gt; is from the package &lt;code&gt;patchutils&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nosl&lt;/code&gt; will strip the backward/forward slashes. It's written by me.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-sh"&gt;cat ~/mywork.patch|lsdiff|nosl 5|p4 -x - edit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
Patch the files and DONE!
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-sh"&gt;patch -p5 &amp;lt; ~/mywork.patch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
Here is the source code of &lt;code&gt;nosl&lt;/code&gt; placed in my &lt;code&gt;.bashrc&lt;/code&gt;,
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-sh"&gt;nosl ()
{
    if [ -z "$1" ]; then
        echo "Usage: echo /hello/world|nosl num";
        echo "strip num leading slashes";
    else
        perl -pe "\$n=$1;while(\$n&amp;gt;0){ \$_=~ s/[^\\\\\\/]*[\\\\\\/]+//;\$n--; }";
    fi
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
BTW, you could avoid all the trouble of &lt;a href="http://www.perforce.com"&gt;Perforce&lt;/a&gt; by switching to &lt;a href="http://git-scm.com"&gt;Git&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
UPDATE: &lt;code&gt;git-p4&lt;/code&gt; is better solution.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>en</category><category>linux</category><category>perforce</category><category>scm</category><guid>http://blog.binchen.org/posts/perforce-tip-how-to-apply-my-default-change-to-the-release-branch/</guid><pubDate>Fri, 24 Jun 2011 21:15:00 GMT</pubDate></item></channel></rss>