<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chen's blog (Posts about window)</title><link>http://redguardtoo.github.io/</link><description></description><atom:link href="http://redguardtoo.github.io/categories/window.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Fri, 25 Jul 2025 14:45:09 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Moving focus and buffer between Emacs window</title><link>http://redguardtoo.github.io/posts/moving-focus-and-buffer-between-emacs-window/</link><dc:creator>Chen Bin</dc:creator><description>&lt;p&gt;
Please read the excellent article &lt;a href="http://irreal.org/blog/?p=1562"&gt;Moving between Emacs windows&lt;/a&gt; for basic setup.
&lt;/p&gt;

&lt;p&gt;
Here is my summary of that article:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;you can use &lt;code&gt;windmove.el&lt;/code&gt; (embedded in Emacs). Its hotkey is Shift+Arrow&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dimitri/switch-window"&gt;switch-window.el&lt;/a&gt; is great. The default hot key is &lt;code&gt;C-x o&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
I also use other packages which is more efficient.
&lt;/p&gt;
&lt;div id="outline-container-orgeca4094" class="outline-2"&gt;
&lt;h3 id="orgeca4094"&gt;window-numbering.el&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-orgeca4094"&gt;
&lt;p&gt;
&lt;a href="https://github.com/nschum/window-numbering.el"&gt;window-numbering.el&lt;/a&gt; is &lt;b&gt;great&lt;/b&gt;. It uses hot key &lt;code&gt;M-number&lt;/code&gt; to switch window (for example, &lt;code&gt;M-3&lt;/code&gt; to select window with number 3). So I can press only &lt;b&gt;one&lt;/b&gt; key to switch window. Besides, it has some extra features like &lt;code&gt;M-0&lt;/code&gt; to jump to the minibuffer.
&lt;/p&gt;

&lt;p&gt;
Here is my configuration for &lt;code&gt;window-numbering.el&lt;/code&gt;:
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(require 'window-numbering)
;; highlight the window number in pink color
(custom-set-faces '(window-numbering-face ((t (:foreground "DeepPink" :underline "DeepPink" :weight bold)))))
(window-numbering-mode 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org6d568d3" class="outline-2"&gt;
&lt;h3 id="org6d568d3"&gt;Evil&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-org6d568d3"&gt;
&lt;p&gt;
&lt;a href="http://emacswiki.org/emacs/Evil"&gt;Evil&lt;/a&gt; is a vim-emulation. It use vim's keybindings &lt;code&gt;C-w h/j/k/l&lt;/code&gt; to move. Please note &lt;code&gt;C-w h&lt;/code&gt; is more efficient than &lt;code&gt;C-x o&lt;/code&gt;. It's because &lt;code&gt;w&lt;/code&gt; key is more close than &lt;code&gt;x&lt;/code&gt; key and &lt;code&gt;h/j/k/l&lt;/code&gt; is easy to press.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgbd87641" class="outline-2"&gt;
&lt;h3 id="orgbd87641"&gt;buffer-move.el&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-orgbd87641"&gt;
&lt;p&gt;
&lt;a href="http://www.emacswiki.org/cgi-bin/wiki/buffer-move.el"&gt;buffer-move.el&lt;/a&gt; moves the buffer instead of focus between windows. It can be installed through &lt;a href="http://melpa.milkbox.net/"&gt;MELPA&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Here is my configuration:
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(global-set-key (kbd "C-c C-b C-k") 'buf-move-up)
(global-set-key (kbd "C-c C-b C-j") 'buf-move-down)
(global-set-key (kbd "C-c C-b C-h") 'buf-move-left)
(global-set-key (kbd "C-c C-b C-l") 'buf-move-right)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org488c54b" class="outline-2"&gt;
&lt;h3 id="org488c54b"&gt;Optimization&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-org488c54b"&gt;
&lt;p&gt;
I use &lt;a href="https://github.com/dacap/keyfreq"&gt;keyfreq&lt;/a&gt; to record all my key pressing for &lt;b&gt;more than six months&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
According to the data collected by keyfreq, more than 99 percent of my moving focus between windows is done through &lt;b&gt;window-numbering.el&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
So it's necessary to optimize window-numbering.el further. By default, window-numbering.el uses &lt;code&gt;M-num&lt;/code&gt; key to select window which is already efficient. But as a geek, I have a tendency to push the efficiency to the extreme end.
&lt;/p&gt;

&lt;p&gt;
Finally I use hotkey &lt;code&gt;,1&lt;/code&gt;, &lt;code&gt;,2&lt;/code&gt;, and &lt;code&gt;,3&lt;/code&gt; to switch to the window numbering &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, and &lt;code&gt;3&lt;/code&gt;.
&lt;/p&gt;

&lt;p&gt;
Here is the code:
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(define-key evil-normal-state-map ",1" 'select-window-1)
(define-key evil-normal-state-map ",2" 'select-window-2)
(define-key evil-normal-state-map ",3" 'select-window-3)
(define-key evil-normal-state-map ",4" 'select-window-4)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
Check &lt;a href="https://github.com/redguardtoo/emacs.d/commit/8a51696"&gt;my setup at github&lt;/a&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>buffer</category><category>emacs</category><category>en</category><category>move</category><category>window</category><guid>http://redguardtoo.github.io/posts/moving-focus-and-buffer-between-emacs-window/</guid><pubDate>Sun, 03 Feb 2013 14:19:00 GMT</pubDate></item><item><title>Emacs中的完美多窗口操作</title><link>http://redguardtoo.github.io/posts/emacs-zhong-de-wan-mei-duo-chuang-kou-cao-zuo/</link><dc:creator>Chen Bin</dc:creator><description>&lt;div id="outline-container-1" class="outline-3"&gt; &lt;h4 id="sec-1"&gt;典型的工作流&lt;/h4&gt; &lt;div class="outline-text-3" id="text-1"&gt;  &lt;ol&gt; &lt;li&gt;在两个子窗口中对比文件内容 &lt;/li&gt; &lt;li&gt;打开更多的窗口以参考其他信息. &lt;/li&gt; &lt;li&gt;对某个窗口内容比较有兴趣,跳转到该窗口,将该窗口最大化 &lt;/li&gt; &lt;li&gt;看完最大化的窗口内容后,undo最大化操作,重新回到早先的多个小窗口模式以便继续纵览全局 &lt;/li&gt; &lt;/ol&gt;  &lt;/div&gt;  &lt;/div&gt;  &lt;div id="outline-container-2" class="outline-3"&gt; &lt;h4 id="sec-2"&gt;将子窗口自动编号,然后按M-0…9跳转(最爱)&lt;/h4&gt; &lt;div class="outline-text-3" id="text-2"&gt;  &lt;p&gt;安装&lt;a href="https://github.com/nschum/window-numbering.el"&gt;window-numbering.el&lt;/a&gt;,然后在.emacs中添加以下代码, &lt;/p&gt;   &lt;pre class="src src-elisp"&gt;(&lt;span style="color: #af00ff;"&gt;require&lt;/span&gt; '&lt;span style="color: #008787;"&gt;window-numbering&lt;/span&gt;)
(window-numbering-mode 1)&lt;/pre&gt;  &lt;/div&gt;  &lt;/div&gt;  &lt;div id="outline-container-3" class="outline-3"&gt; &lt;h4 id="sec-3"&gt;undo/redo之前的窗口操作(最爱)&lt;/h4&gt; &lt;div class="outline-text-3" id="text-3"&gt;  &lt;p&gt;安装&lt;a href="http://www.emacswiki.org/emacs/WinnerMode"&gt;Winner Mode&lt;/a&gt;,然后在.emacs中添加以下代码, &lt;/p&gt;   &lt;pre class="src src-elisp"&gt;(winner-mode 1)

&lt;span style="color: #af0000;"&gt;;; &lt;/span&gt;&lt;span style="color: #af0000;"&gt;copied from http://puntoblogspot.blogspot.com/2011/05/undo-layouts-in-emacs.html&lt;/span&gt;
(global-set-key (kbd &lt;span style="color: #87005f;"&gt;"C-x 4 u"&lt;/span&gt;) 'winner-undo)
(global-set-key (kbd &lt;span style="color: #87005f;"&gt;"C-x 4 r"&lt;/span&gt;) 'winner-redo)&lt;/pre&gt;  &lt;/div&gt;  &lt;/div&gt;  &lt;div id="outline-container-4" class="outline-3"&gt; &lt;h4 id="sec-4"&gt;焦点移动到下一窗口(常用)&lt;/h4&gt; &lt;div class="outline-text-3" id="text-4"&gt;  &lt;p&gt;M-x other-window,快捷键是`C-x o`. &lt;/p&gt;&lt;/div&gt;  &lt;/div&gt;  &lt;div id="outline-container-5" class="outline-3"&gt; &lt;h4 id="sec-5"&gt;水平/垂直切分当前窗口(常用)&lt;/h4&gt; &lt;div class="outline-text-3" id="text-5"&gt;  &lt;p&gt;快捷键C-x 2/3 &lt;/p&gt;&lt;/div&gt;  &lt;/div&gt;  &lt;div id="outline-container-6" class="outline-3"&gt; &lt;h4 id="sec-6"&gt;将当前子窗口最大化(常用)&lt;/h4&gt; &lt;div class="outline-text-3" id="text-6"&gt;  &lt;p&gt;M-x delete-other-windows,快捷键`C-x 1`. &lt;/p&gt;&lt;/div&gt;  &lt;/div&gt;  &lt;div id="outline-container-7" class="outline-3"&gt; &lt;h4 id="sec-7"&gt;删除当前子窗口(偶尔用)&lt;/h4&gt; &lt;div class="outline-text-3" id="text-7"&gt;  &lt;p&gt;M-x delete-window (快捷键`C-x 0`) &lt;/p&gt; &lt;p&gt; 顺便说一下,M-x kill-buffer-and-window (快捷键`C-x 4 0`),我现在用得更多 些. &lt;/p&gt;&lt;/div&gt;  &lt;/div&gt;  &lt;div id="outline-container-8" class="outline-3"&gt; &lt;h4 id="sec-8"&gt;移动焦点到上下左右的窗口(基本不用)&lt;/h4&gt; &lt;div class="outline-text-3" id="text-8"&gt;  &lt;p&gt;因我较喜欢vi快捷键,所以我安装了&lt;a href="http://emacswiki.org/emacs/Evil"&gt;Evil Mode&lt;/a&gt;.快捷键和Vi一样. C-w h/j/k/l移动至各方向的子窗口. &lt;/p&gt;&lt;/div&gt;  &lt;/div&gt;  &lt;div id="outline-container-9" class="outline-3"&gt; &lt;h4 id="sec-9"&gt;存储/载入窗口布局到register(基本不用)&lt;/h4&gt; &lt;div class="outline-text-3" id="text-9"&gt;  &lt;p&gt;`C-x r w`存储,`C-x r j`载入. &lt;/p&gt;&lt;/div&gt; &lt;/div&gt;</description><category>emacs</category><category>multiple</category><category>window</category><category>zh</category><guid>http://redguardtoo.github.io/posts/emacs-zhong-de-wan-mei-duo-chuang-kou-cao-zuo/</guid><pubDate>Fri, 20 Jul 2012 14:56:00 GMT</pubDate></item></channel></rss>